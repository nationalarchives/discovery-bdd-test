// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.3.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace KBSTests.FeatureFiles
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("bulkOrder")]
    public partial class BulkOrderFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "bulkOrder.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-GB"), "bulkOrder", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line hidden
#line 4
 testRunner.Given("Go to KBS page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 5
 testRunner.When("click on Select a date under book a bulk order visit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 6
 testRunner.And("click on date in the first row", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("bulkOrder_orderDocNow_20")]
        [NUnit.Framework.TestCaseAttribute("3656217", "firstTester", "lastTester", "tnadiscovery100@gmail.com", "abcd", "CAB 120", "CAB 120/1", "CAB 120/2", "CAB 120/3", "CAB 120/4", "CAB 120/5", "CAB 120/6", "CAB 120/7", "CAB 120/8", "CAB 120/9", "CAB 120/10", "CAB 120/11", "CAB 120/12", "CAB 120/13", "CAB 120/14", "CAB 120/15", "CAB 120/16", "CAB 120/17", "CAB 120/18", "CAB 120/19", "CAB 120/20", null)]
        public virtual void BulkOrder_OrderDocNow_20(
                    string readerTicketNo, 
                    string firstName, 
                    string lastName, 
                    string email, 
                    string telNo, 
                    string series, 
                    string docRef1, 
                    string docRef2, 
                    string docRef3, 
                    string docRef4, 
                    string docRef5, 
                    string docRef6, 
                    string docRef7, 
                    string docRef8, 
                    string docRef9, 
                    string docRef10, 
                    string docRef11, 
                    string docRef12, 
                    string docRef13, 
                    string docRef14, 
                    string docRef15, 
                    string docRef16, 
                    string docRef17, 
                    string docRef18, 
                    string docRef19, 
                    string docRef20, 
                    string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("readerTicketNo", readerTicketNo);
            argumentsOfScenario.Add("firstName", firstName);
            argumentsOfScenario.Add("lastName", lastName);
            argumentsOfScenario.Add("email", email);
            argumentsOfScenario.Add("telNo", telNo);
            argumentsOfScenario.Add("series", series);
            argumentsOfScenario.Add("DocRef1", docRef1);
            argumentsOfScenario.Add("DocRef2", docRef2);
            argumentsOfScenario.Add("DocRef3", docRef3);
            argumentsOfScenario.Add("DocRef4", docRef4);
            argumentsOfScenario.Add("DocRef5", docRef5);
            argumentsOfScenario.Add("DocRef6", docRef6);
            argumentsOfScenario.Add("DocRef7", docRef7);
            argumentsOfScenario.Add("DocRef8", docRef8);
            argumentsOfScenario.Add("DocRef9", docRef9);
            argumentsOfScenario.Add("DocRef10", docRef10);
            argumentsOfScenario.Add("DocRef11", docRef11);
            argumentsOfScenario.Add("DocRef12", docRef12);
            argumentsOfScenario.Add("DocRef13", docRef13);
            argumentsOfScenario.Add("DocRef14", docRef14);
            argumentsOfScenario.Add("DocRef15", docRef15);
            argumentsOfScenario.Add("DocRef16", docRef16);
            argumentsOfScenario.Add("DocRef17", docRef17);
            argumentsOfScenario.Add("DocRef18", docRef18);
            argumentsOfScenario.Add("DocRef19", docRef19);
            argumentsOfScenario.Add("DocRef20", docRef20);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("bulkOrder_orderDocNow_20", null, tagsOfScenario, argumentsOfScenario);
#line 11
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 3
this.FeatureBackground();
#line hidden
#line 12
 testRunner.When(string.Format("enter \"{0}\",\"{1}\",\"{2}\",\"{3}\",\"{4}\" and complete booking", readerTicketNo, firstName, lastName, email, telNo), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 13
 testRunner.Then("check the page title, click on Order documents now", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 14
 testRunner.And(string.Format("enter \"{0}\",\"{1}\",\"{2}\",\"{3}\",\"{4}\",\"{5}\",\"{6}\",\"{7}\",\"{8}\",\"{9}\",\"{10}\"", series, docRef1, docRef2, docRef3, docRef4, docRef5, docRef6, docRef7, docRef8, docRef9, docRef10), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
 testRunner.And(string.Format("enter all the doc reference numbers \"{0}\",\"{1}\",\"{2}\",\"{3}\",\"{4}\",\"{5}\",\"{6}\",\"{7" +
                            "}\",\"{8}\",\"{9}\"", docRef11, docRef12, docRef13, docRef14, docRef15, docRef16, docRef17, docRef18, docRef19, docRef20), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
 testRunner.And("check the page title order summary", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("bulkOrder_orderDocLater")]
        [NUnit.Framework.TestCaseAttribute("9497920", "Tester", "lastTester", "tnadiscovery100@gmail.com", "abcd", null)]
        public virtual void BulkOrder_OrderDocLater(string readerTicketNo, string firstName, string lastName, string email, string telNo, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("readerTicketNo", readerTicketNo);
            argumentsOfScenario.Add("firstName", firstName);
            argumentsOfScenario.Add("lastName", lastName);
            argumentsOfScenario.Add("email", email);
            argumentsOfScenario.Add("telNo", telNo);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("bulkOrder_orderDocLater", null, tagsOfScenario, argumentsOfScenario);
#line 22
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 3
this.FeatureBackground();
#line hidden
#line 23
 testRunner.When(string.Format("enter \"{0}\",\"{1}\",\"{2}\",\"{3}\",\"{4}\" and complete booking", readerTicketNo, firstName, lastName, email, telNo), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 24
 testRunner.Then("check the page title, click on Order documents later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 25
 testRunner.And("check the page title, click on Yes, I’d like to order my documents later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("bulkOrder_orderDocLater_No")]
        [NUnit.Framework.TestCaseAttribute("9503041", "firstTester", "lastTester", "tnadiscovery100@gmail.com", "abcd", "CAB 120", "CAB 120/1", "CAB 120/2", "CAB 120/3", "CAB 120/4", "CAB 120/5", "CAB 120/6", "CAB 120/7", "CAB 120/8", "CAB 120/9", "CAB 120/10", "CAB 120/11", "CAB 120/12", "CAB 120/13", "CAB 120/14", "CAB 120/15", "CAB 120/16", "CAB 120/17", "CAB 120/18", "CAB 120/19", "CAB 120/20", null)]
        public virtual void BulkOrder_OrderDocLater_No(
                    string readerTicketNo, 
                    string firstName, 
                    string lastName, 
                    string email, 
                    string telNo, 
                    string series, 
                    string docRef1, 
                    string docRef2, 
                    string docRef3, 
                    string docRef4, 
                    string docRef5, 
                    string docRef6, 
                    string docRef7, 
                    string docRef8, 
                    string docRef9, 
                    string docRef10, 
                    string docRef11, 
                    string docRef12, 
                    string docRef13, 
                    string docRef14, 
                    string docRef15, 
                    string docRef16, 
                    string docRef17, 
                    string docRef18, 
                    string docRef19, 
                    string docRef20, 
                    string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("readerTicketNo", readerTicketNo);
            argumentsOfScenario.Add("firstName", firstName);
            argumentsOfScenario.Add("lastName", lastName);
            argumentsOfScenario.Add("email", email);
            argumentsOfScenario.Add("telNo", telNo);
            argumentsOfScenario.Add("series", series);
            argumentsOfScenario.Add("DocRef1", docRef1);
            argumentsOfScenario.Add("DocRef2", docRef2);
            argumentsOfScenario.Add("DocRef3", docRef3);
            argumentsOfScenario.Add("DocRef4", docRef4);
            argumentsOfScenario.Add("DocRef5", docRef5);
            argumentsOfScenario.Add("DocRef6", docRef6);
            argumentsOfScenario.Add("DocRef7", docRef7);
            argumentsOfScenario.Add("DocRef8", docRef8);
            argumentsOfScenario.Add("DocRef9", docRef9);
            argumentsOfScenario.Add("DocRef10", docRef10);
            argumentsOfScenario.Add("DocRef11", docRef11);
            argumentsOfScenario.Add("DocRef12", docRef12);
            argumentsOfScenario.Add("DocRef13", docRef13);
            argumentsOfScenario.Add("DocRef14", docRef14);
            argumentsOfScenario.Add("DocRef15", docRef15);
            argumentsOfScenario.Add("DocRef16", docRef16);
            argumentsOfScenario.Add("DocRef17", docRef17);
            argumentsOfScenario.Add("DocRef18", docRef18);
            argumentsOfScenario.Add("DocRef19", docRef19);
            argumentsOfScenario.Add("DocRef20", docRef20);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("bulkOrder_orderDocLater_No", null, tagsOfScenario, argumentsOfScenario);
#line 31
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 3
this.FeatureBackground();
#line hidden
#line 32
 testRunner.When(string.Format("enter \"{0}\",\"{1}\",\"{2}\",\"{3}\",\"{4}\" and complete booking", readerTicketNo, firstName, lastName, email, telNo), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 33
 testRunner.Then("check the page title, click on Order documents later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 34
 testRunner.And("check the page title, click on No, I’d like to order my documents now", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
    testRunner.And(string.Format("enter \"{0}\",\"{1}\",\"{2}\",\"{3}\",\"{4}\",\"{5}\",\"{6}\",\"{7}\",\"{8}\",\"{9}\",\"{10}\"", series, docRef1, docRef2, docRef3, docRef4, docRef5, docRef6, docRef7, docRef8, docRef9, docRef10), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 36
 testRunner.And(string.Format("enter all the doc reference numbers \"{0}\",\"{1}\",\"{2}\",\"{3}\",\"{4}\",\"{5}\",\"{6}\",\"{7" +
                            "}\",\"{8}\",\"{9}\"", docRef11, docRef12, docRef13, docRef14, docRef15, docRef16, docRef17, docRef18, docRef19, docRef20), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
  testRunner.And("check the page title order summary", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("bulkOrder_cancelVisit")]
        [NUnit.Framework.TestCaseAttribute("9487253", "Tester", "lastTester", "tnadiscovery100@gmail.com", "abcd", null)]
        public virtual void BulkOrder_CancelVisit(string readerTicketNo, string firstName, string lastName, string email, string telNo, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("readerTicketNo", readerTicketNo);
            argumentsOfScenario.Add("firstName", firstName);
            argumentsOfScenario.Add("lastName", lastName);
            argumentsOfScenario.Add("email", email);
            argumentsOfScenario.Add("telNo", telNo);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("bulkOrder_cancelVisit", null, tagsOfScenario, argumentsOfScenario);
#line 43
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 3
this.FeatureBackground();
#line hidden
#line 44
 testRunner.When(string.Format("enter \"{0}\",\"{1}\",\"{2}\",\"{3}\",\"{4}\" and complete booking", readerTicketNo, firstName, lastName, email, telNo), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 46
 testRunner.Then("check the page title, click on Order documents now", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 47
 testRunner.And("click on cancel your visit, check the page title and proceed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 48
 testRunner.And("I can see the message Your visit has been cancelled on the top of the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
